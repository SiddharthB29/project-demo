LAB-1
1. a) Write a python program to find the best of two test average marks out of three test’s marks accepted from the user.
m1=int(input("enter the marks for test1:"))
m2=int(input("enter the marks for test1:"))
m3=int(input("enter the marks for test1:"))
bstot=sorted ([m1, m2, m3], reverse=True) [:2]
avg=sum(bstot)/2
print ("best of two out of three is",avg)

OUTPUT:
enter the marks for test1:45
enter the marks for test1:25
enter the marks for test1:50
best of two out of three is 47.5

OR (another model)
1. a) Write a python program to find the best of two test average marks out of three test’s marks accepted from the user.
m1 = int(input("Enter marks for test1 : "))
m2 = int(input("Enter marks for test2 : "))
m3 = int(input("Enter marks for test3 : "))

if m1 <= m2 and m1 <= m3:
    avgMarks = (m2+m3)/2
elif m2 <= m1 and m2 <= m3:
    avgMarks = (m1+m3)/2
elif m3 <= m1 and m2 <= m2:
    avgMarks = (m1+m2)/2    
    
print("Average of best two test marks  out of three test’s marks is", avgMarks);

OUTPUT:   
Enter marks for test1 : 
30 
Enter marks for test2 : 
50 
Enter marks for test3 : 
80 
Average of best two test marks out of three test’s marks is 65.0

1b) Develop a Python program to check whether a given number is palindrome or not and also count the number of occurrences of each digit in the input number.
val = int(input("Enter a value : "))
str_val = str(val)
if str_val == str_val[::-1]:
    print("Palindrome")
else:
    print ("Not Palindrome")
for i in range (10):
    if str_val.count(str(i)) > 0:
        print(str(i),"appears", str_val.count(str(i)), "times");




OUTPUT:
Enter a value: 1221
Palindrome
1 appears 2 times
2 appears 2 times

Enter a value: 123421
Not Palindrome
1 appears 2 times
2 appears 2 times
3 appears 1 times
4 appears 1 times