8.Write a Python program to explain working with Bokeh line graph using Annotations and Legends.
a) Write a Python program for plotting different types of plots using Bokeh.

import numpy as np

from bokeh.layouts import gridplot
from bokeh.plotting import figure, show

x = np.linspace(0, 4*np.pi, 100)
y = np.sin(x)

TOOLS = "pan,wheel_zoom,box_zoom,reset,save,box_select"

p1 = figure(title="Example 1", tools=TOOLS)

p1.circle(x,   y, legend_label="sin(x)")
p1.circle(x, 2*y, legend_label="2*sin(x)", color="orange")
p1.circle(x, 3*y, legend_label="3*sin(x)", color="green")

p1.legend.title = 'Markers'

p2 = figure(title="Example 2", tools=TOOLS)

p2.circle(x, y, legend_label="sin(x)")
p2.line(x, y, legend_label="sin(x)")

p2.line(x, 2*y, legend_label="2*sin(x)",
        line_dash=(4, 4), line_color="orange", line_width=2)

p2.square(x, 3*y, legend_label="3*sin(x)", fill_color=None, line_color="green")
p2.line(x, 3*y, legend_label="3*sin(x)", line_color="green")

p2.legend.title = 'Lines'

show(gridplot([p1, p2], ncols=2, width=400, height=400))



Explanation:

Data Generation:
The script generates example data (x and y) using NumPy to represent sine waves.
Interactive Tools:
Bokehâ€™s interactive tools (TOOLS) are enabled for features like pan, zoom, reset, and save.
Multiple Plots:
Two separate plots (p1 and p2) are created with different visualizations, including circles, lines, and markers.
Legend and Titles:
Legends are added to distinguish between different elements in the plots.
Titles are provided for each plot.
Grid Layout:
The gridplot function is used to arrange the plots in a grid layout.
Interactive Display:
The show function is called to display the grid layout, enabling interactive exploration.
